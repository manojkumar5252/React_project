{"ast":null,"code":"// src/CountryInfo.js\nimport React,{useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function CountryInfo(){var _countryData$capital;const[countryName,setCountryName]=useState('');const[countryData,setCountryData]=useState(null);const[error,setError]=useState('');const fetchCountryData=async()=>{try{const response=await axios.get(\"https://restcountries.com/v3.1/name/\".concat(countryName));setCountryData(response.data[0]);setError('');}catch(err){setError('Country not found');setCountryData(null);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Country Information\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter country name\",value:countryName,onChange:e=>setCountryName(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchCountryData,children:\"Get Country Info\"}),error&&/*#__PURE__*/_jsx(\"p\",{children:error}),countryData&&/*#__PURE__*/_jsxs(\"div\",{className:\"country-info\",children:[/*#__PURE__*/_jsx(\"h2\",{children:countryData.name.common}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Capital:\"}),\" \",(_countryData$capital=countryData.capital)===null||_countryData$capital===void 0?void 0:_countryData$capital[0]]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Region:\"}),\" \",countryData.region]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Subregion:\"}),\" \",countryData.subregion]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Population:\"}),\" \",countryData.population.toLocaleString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Area:\"}),\" \",countryData.area.toLocaleString(),\" km\\xB2\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Currency:\"}),\" \",Object.values(countryData.currencies||{}).map(c=>\"\".concat(c.name,\" (\").concat(c.symbol,\")\")).join(', ')]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Languages:\"}),\" \",Object.values(countryData.languages||{}).join(', ')]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Timezones:\"}),\" \",countryData.timezones.join(', ')]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Borders:\"}),\" \",countryData.borders?countryData.borders.join(', '):'None']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Continent:\"}),\" \",countryData.continents.join(', ')]}),/*#__PURE__*/_jsx(\"img\",{src:countryData.flags.svg,alt:\"\".concat(countryData.name.common,\" flag\"),className:\"flag\"}),countryData.coatOfArms&&countryData.coatOfArms.svg&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Coat of Arms\"}),/*#__PURE__*/_jsx(\"img\",{src:countryData.coatOfArms.svg,alt:\"\".concat(countryData.name.common,\" coat of arms\"),className:\"coat-of-arms\"})]}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"https://www.google.com/maps/search/?api=1&query=\".concat(countryData.name.common),target:\"_blank\",rel:\"noopener noreferrer\",children:\"View on Google Maps\"})})]})]});}export default CountryInfo;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","CountryInfo","_countryData$capital","countryName","setCountryName","countryData","setCountryData","error","setError","fetchCountryData","response","get","concat","data","err","className","children","type","placeholder","value","onChange","e","target","onClick","name","common","capital","region","subregion","population","toLocaleString","area","Object","values","currencies","map","c","symbol","join","languages","timezones","borders","continents","src","flags","svg","alt","coatOfArms","href","rel"],"sources":["C:/Users/mmk85/Downloads/React_project-main (2)/React_project-main/src/CountryInfo.jsx"],"sourcesContent":["// src/CountryInfo.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CountryInfo() {\r\n  const [countryName, setCountryName] = useState('');\r\n  const [countryData, setCountryData] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const fetchCountryData = async () => {\r\n    try {\r\n      const response = await axios.get(`https://restcountries.com/v3.1/name/${countryName}`);\r\n      setCountryData(response.data[0]);\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Country not found');\r\n      setCountryData(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Country Information</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter country name\"\r\n        value={countryName}\r\n        onChange={(e) => setCountryName(e.target.value)}\r\n      />\r\n      <button onClick={fetchCountryData}>Get Country Info</button>\r\n\r\n      {error && <p>{error}</p>}\r\n\r\n      {countryData && (\r\n        <div className=\"country-info\">\r\n          <h2>{countryData.name.common}</h2>\r\n          <p><strong>Capital:</strong> {countryData.capital?.[0]}</p>\r\n          <p><strong>Region:</strong> {countryData.region}</p>\r\n          <p><strong>Subregion:</strong> {countryData.subregion}</p>\r\n          <p><strong>Population:</strong> {countryData.population.toLocaleString()}</p>\r\n          <p><strong>Area:</strong> {countryData.area.toLocaleString()} kmÂ²</p>\r\n          \r\n          <p><strong>Currency:</strong> {Object.values(countryData.currencies || {}).map(c => `${c.name} (${c.symbol})`).join(', ')}</p>\r\n          <p><strong>Languages:</strong> {Object.values(countryData.languages || {}).join(', ')}</p>\r\n          <p><strong>Timezones:</strong> {countryData.timezones.join(', ')}</p>\r\n          <p><strong>Borders:</strong> {countryData.borders ? countryData.borders.join(', ') : 'None'}</p>\r\n          <p><strong>Continent:</strong> {countryData.continents.join(', ')}</p>\r\n\r\n          <img src={countryData.flags.svg} alt={`${countryData.name.common} flag`} className=\"flag\" />\r\n          \r\n          {countryData.coatOfArms && countryData.coatOfArms.svg && (\r\n            <div>\r\n              <h3>Coat of Arms</h3>\r\n              <img src={countryData.coatOfArms.svg} alt={`${countryData.name.common} coat of arms`} className=\"coat-of-arms\" />\r\n            </div>\r\n          )}\r\n          \r\n          <p><a href={`https://www.google.com/maps/search/?api=1&query=${countryData.name.common}`} target=\"_blank\" rel=\"noopener noreferrer\">View on Google Maps</a></p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountryInfo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}